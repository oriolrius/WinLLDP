name: Build and Release

on:
  push:
    tags:
      - 'v*'  # Triggers on tags like v0.9.0, v1.0.0, etc.

jobs:
  build:
    runs-on: windows-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
    
    - name: Install uv
      run: |
        irm https://astral.sh/uv/install.ps1 | iex
        $env:Path = "$env:USERPROFILE\.cargo\bin;$env:Path"
    
    - name: Install dependencies
      run: |
        uv sync
    
    - name: Build executable with PyInstaller
      run: |
        uv run pyinstaller --clean pyinstaller.spec
    
    - name: Get version from tag
      id: get_version
      run: |
        $TAG = "${{ github.ref_name }}"
        echo "VERSION=$TAG" >> $env:GITHUB_OUTPUT
    
    - name: Rename executable with version
      run: |
        $version = "${{ steps.get_version.outputs.VERSION }}"
        Move-Item -Path "dist\winlldp.exe" -Destination "dist\winlldp-$version.exe"
    
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref_name }}
        release_name: WinLLDP ${{ github.ref_name }}
        body: |
          ## WinLLDP ${{ github.ref_name }}
          
          Windows LLDP Service
          
          ### Installation
          1. Download `winlldp-${{ github.ref_name }}.exe`
          2. Run as Administrator: `winlldp-${{ github.ref_name }}.exe service install`
          3. Start the service: `winlldp-${{ github.ref_name }}.exe service start`
          
          ### Changes
          See [CHANGELOG](https://github.com/${{ github.repository }}/blob/main/CHANGELOG.md) for details.
        draft: false
        prerelease: false
    
    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: dist\winlldp-${{ github.ref_name }}.exe
        asset_name: winlldp-${{ github.ref_name }}.exe
        asset_content_type: application/vnd.microsoft.portable-executable
    
    - name: Upload executable as artifact (backup)
      uses: actions/upload-artifact@v4
      with:
        name: winlldp-${{ github.ref_name }}
        path: dist\winlldp-${{ github.ref_name }}.exe
        retention-days: 30